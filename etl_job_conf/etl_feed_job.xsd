<?xml version="1.1" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:workflow="uri:etlFramework:workflow:0.1" elementFormDefault="qualified"
           targetNamespace="uri:etlFramework:workflow:0.1">
<!-- START: Common enumerations used in xsd schema. -->
    <xs:simpleType name="SupportedFileType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="PARQUET"/>
            <xs:enumeration value="CSV"/>
            <xs:enumeration value="JSON"/>
            <xs:enumeration value="AVRO"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MergeGroupType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]*[,][0-9]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PartitionScope">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MERGE"/>
            <xs:enumeration value="LOAD"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PartitionColumnValue">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DATE"/>
            <xs:enumeration value="YEAR"/>
            <xs:enumeration value="MONTH"/>
            <xs:enumeration value="DAY"/>
            <xs:enumeration value="HOUR"/>
            <xs:enumeration value="OTHER"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TransformationRuleOrder">
        <xs:restriction base="xs:positiveInteger"/>
    </xs:simpleType>
    <xs:simpleType name="TransformationRuleGroup">
        <xs:restriction base="xs:positiveInteger"/>
    </xs:simpleType>
    <xs:simpleType name="TransformationRule">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MERGE"/>
            <xs:enumeration value="NIL"/>
            <xs:enumeration value="FILTER"/>
            <xs:enumeration value="SELECT"/>
            <xs:enumeration value="PARTITION"/>
            <xs:enumeration value="EXPLODE"/>
            <xs:enumeration value="DROP"/>
            <xs:enumeration value="SCHEMA_TRANSFORMATION"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ProcessFrequency">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ONCE"/>
            <xs:enumeration value="HOURLY"/>
            <xs:enumeration value="DAILY"/>
            <xs:enumeration value="WEEKLY"/>
            <xs:enumeration value="MONTHLY"/>
            <xs:enumeration value="YEARLY"/>
            <xs:enumeration value="DATE_RANGE"/>
        </xs:restriction>
    </xs:simpleType>
<!-- END: Common enumerations used in xsd schema. -->

<!-- START: File Path xsd descriptors.
Two Options:
    a) Provide absolute path[use -> <path> tag]
    b) provide relative path or path pattern[ use -> <path_pattern> tag]-->
    <xs:complexType name="FileName">
        <xs:all>
            <xs:element name="prefix" type="xs:string"/>
            <xs:element name="separator" minOccurs="0" type="xs:string"/>
            <xs:element name="suffix" minOccurs="0" type="xs:string"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="GroupsPattern">
        <xs:sequence>
            <xs:element name="member" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="order" type="xs:int"/>
                        <xs:element name="groupNamePattern" type="xs:string"/>
                        <xs:element name="formatGroupName" default="false" minOccurs="0" type="xs:boolean"/>
                        <xs:element name="formatArgValues" minOccurs="0" type="workflow:Params"/>
                    </xs:all>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="FeedPattern">
        <xs:all>
            <xs:element name="feedNamePattern" type="xs:string"/>
            <xs:element name="formatFeedName" minOccurs="0" default="false" type="xs:boolean"/>
            <xs:element name="formatArgValues" minOccurs="0" type="workflow:Params"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="PathPattern">
        <xs:all>
            <xs:element name="initialPath" type="xs:string"/>
            <xs:element name="groupPattern" type="workflow:GroupsPattern" minOccurs="0"/>
            <xs:element name="feedPattern" type="workflow:FeedPattern" minOccurs="0"/>
            <xs:element name="fileName" type="workflow:FileName" minOccurs="0"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="DataPath">
        <xs:choice>
            <xs:element name="path" type="xs:string"/>
            <xs:element name="pathPattern" type="workflow:PathPattern"/>
        </xs:choice>
    </xs:complexType>
<!-- END: File Path xsd descriptors. -->

<!-- START: Other common xsd descriptors. -->
    <xs:complexType name="Query">
        <xs:all>
            <xs:element name="sqlQueryFile" type="workflow:DataPath"/>
            <xs:element name="configurationFile" type="workflow:DataPath"/>
            <xs:element name="queryParams" minOccurs="0" type="workflow:Params"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="Params">
        <xs:sequence>
            <xs:element name="param" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="order" type="xs:int"/>
                    <xs:attribute name="name" type="xs:string"/>
                    <xs:attribute name="value" type="xs:string"/>
                    <xs:attribute name="defaultValue" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
<!-- END: Other common xsd descriptors. -->

<!-- START: Load xsd descriptors.-->
    <xs:complexType name="PartitionData">
        <xs:all>
            <xs:element name="coalescePartition" type="xs:boolean"/>
            <xs:element name="overwritePartition" type="xs:boolean"/>
            <xs:element name="coalescePartitionCount" type="xs:integer"/>
            <xs:element name="partitionColumns">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="column" maxOccurs="unbounded" minOccurs="0">
                            <xs:complexType>
                                <xs:attribute name="name" type="xs:string"/>
                                <xs:attribute name="value" type="workflow:PartitionColumnValue"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="Hive">
        <xs:all>
            <xs:element name="partitionData" type="workflow:PartitionData"/>
            <xs:element name="dataPath" type="workflow:DataPath"/>
        </xs:all>
        <xs:attribute name="dbName" use="required" type="xs:string"/>
        <xs:attribute name="tableName" use="required" type="xs:string"/>
        <xs:attribute name="fileType" use="required" type="workflow:SupportedFileType"/>
    </xs:complexType>
    <xs:complexType name="LoadFileSystem">
        <xs:all>
            <xs:element name="dataSet" minOccurs="0" type="xs:string"/>
            <xs:element name="feedName" minOccurs="0" type="xs:string"/>
            <xs:element name="dataPath" type="workflow:DataPath"/>
        </xs:all>
        <xs:attribute name="fileType" use="required" type="workflow:SupportedFileType"/>
    </xs:complexType>
    <xs:complexType name="Loadfeed">
        <xs:sequence>
            <xs:choice >
                <xs:element name="hive" type="workflow:Hive"/>
                <xs:element name="fileSystem" type="workflow:LoadFileSystem"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" use="required" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="Load">
        <xs:sequence>
            <xs:element name="feed" maxOccurs="unbounded" type="workflow:Loadfeed"/>
        </xs:sequence>
    </xs:complexType>
<!-- END: Load xsd descriptors. -->

<!-- START: Transform schema xsd descriptors. -->
    <xs:complexType name="RuleType">
        <xs:all id="RuleSequence">
            <xs:element name="fieldMapping" type="workflow:FieldMapping" minOccurs="0"/>
            <xs:element name="condition" type="xs:string" minOccurs="0"/>
        </xs:all>
        <xs:attribute name="type" use="required" type="workflow:TransformationRule"/>
        <xs:attribute name="order" use="required" type="workflow:TransformationRuleOrder"/>
        <xs:attribute name="group" use="required" type="workflow:TransformationRuleGroup"/>

        <xs:attribute name="scope" type="workflow:PartitionScope"/>
        <xs:attribute name="mergeGroup" type="workflow:MergeGroupType"/>

        <xs:attribute name="failedRowLimit" type="xs:positiveInteger"/>
        <xs:attribute name="failedFieldLimit" type="xs:positiveInteger"/>
    </xs:complexType>
    <xs:complexType name="FieldMapping">
        <xs:attribute name="sourceName" use="required" type="xs:string"/>
        <xs:attribute name="targetName" use="required" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="Transform">
        <xs:sequence>
            <xs:element name="rule" type="workflow:RuleType" maxOccurs="unbounded"/>
            <!-- TODO: validate transformed data [needs more condition for validation, currently it is only boolean operator] -->
            <xs:element name="validateTransformedData" minOccurs="0" default="false"  type="xs:boolean" />
        </xs:sequence>
    </xs:complexType>
<!-- END: Transform schema xsd descriptors.  -->

<!-- START: Extract schema xsd descriptors. -->
    <xs:complexType name="ExtractFileSystem">
        <xs:all>
            <xs:element name="dataPath" type="workflow:DataPath"/>
        </xs:all>
        <xs:attribute name="fileType" use="required" type="workflow:SupportedFileType"/>
    </xs:complexType>
    <xs:complexType name="JDBC">
        <xs:all>
            <xs:element name="query" minOccurs="0" type="workflow:Query"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="ExtractFeed">
        <xs:sequence>
            <xs:choice >
                <xs:element name="jdbc" type="workflow:JDBC"/>
                <xs:element name="fileSystem" type="workflow:ExtractFileSystem"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="feedName" use="required" type="xs:string"/>
        <xs:attribute name="validateExtractedData" use="required" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="Extract">
        <xs:sequence>
           <xs:element name="feed" maxOccurs="unbounded" type="workflow:ExtractFeed">
           </xs:element>
        </xs:sequence>
    </xs:complexType>
<!-- END: Extract schema xsd descriptors. -->

<!-- START: JobStaticParam schema xsd descriptors. -->
    <xs:complexType name="JobStaticParam">
        <xs:all>
            <xs:element name="otherParams" minOccurs="0" type="workflow:Params"/>
        </xs:all>
        <xs:attribute name="publishStats" use="required" type="xs:boolean"/>
        <xs:attribute name="jobName" use="required" type="xs:string"/>
        <xs:attribute name="frequency" use="required" type="workflow:ProcessFrequency"/>
    </xs:complexType>
<!-- END: JobStaticParam schema xsd descriptors.-->

<!-- START: etlJob schema xsd descriptors. -->
    <xs:element name="etlJob" type="workflow:ETLJob"/>
    <xs:complexType name="ETLJob">
        <xs:all>
            <xs:element name="jobStaticParam" type="workflow:JobStaticParam" />
            <xs:element name="extract" type="workflow:Extract"/>
            <xs:element name="transform" type="workflow:Transform"/>
            <xs:element name="load" type="workflow:Load" />
        </xs:all>
    </xs:complexType>
<!-- END: etlJob schema xsd descriptors. -->
</xs:schema>